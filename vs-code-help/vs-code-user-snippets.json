{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "print_r": {
    "prefix": "_pri",
    "body": [
      "echo '<br>MAYANK '.basename(__FILE__).' '.__LINE__.'<pre> data :: '; print_r($$data); echo '</pre>'; exit;"
    ],
    "description": "echo '<pre>'; print_r($data); echo '</pre>;"
  },
  "ajax": {
    "prefix": "_ajax",
    "body": [
      "$.ajax({",
      "url: 'url.php',",
      "type: 'POST',",
      "data: {id:data},",
      "success: function(response){",
        "alert(response);",
        "window.location.href = 'url';",
      "}",
      "});"
    ],
    "description": "ajax function"
  },

  "alertbox": {
    "prefix": "alert",
    "body": [
      "$.bootstrapGrowl('Date cannot be greater than current date', { type: 'danger' });"
    ],
    "description": "bootstrapGrowl alert"
  },

  
  "print_R": {
    "prefix": "_R",
    "body": ["<pre>attribute :: {{print_r(attribute)}}</pre>"],
    "description": "<pre>attribute :: {{print_r(attribute)}}</pre>"
  },
  "_die": {
    "prefix": "_die",
    "body": ["die(basename(__FILE__).\" : \".__LINE__);"],
    "description": "die with magic function"
  },
  "console.log": {
    "prefix": "_console",
    "body": ["console.log(`%c ${data}`, 'font-size:50px; color: red;');"],
    "description": "console in color"
  },
  "Fopen file log without exit": {
    "prefix": "pri_F",
    "body": [
      "$$print_file = fopen(DIR_WS_IMAGES_TEMPIMAGES.'custom_log.log','a');\nfwrite($$print_file,print_r($$writedata,true));"
    ],
    "description": "Fopen file log without exit"
  },
  "done": {
    "prefix": "_done",
    "body": ["(done âœ“)"],
    "description": "done"
  },
  "phpCount": {
    "prefix": "_Count",
    "body": [
      "function phpCount($$value=''){",
      "   if(is_countable($$value)) return count($$value);",
      "   return 0;",
      "}"
    ],
    "description": "The code checks if the value is countable and returns a count of the value."
  },
  "opsEmpty": {
    "prefix": "_Empty",
    "body": [
      "function phpEmpty($$value=''){",
      "   if(empty($$value) || is_null($$value)) return true",
      "   return false;",
      "}"
    ],
    "description": "The code will return true if the value is empty or null."
  },
  "error_reporting_on": {
    "prefix": "_err",
    "body": [
      "   ini_set('display_errors', 1);",
      "   ini_set('display_startup_errors', 1);",
      "   error_reporting(E_ALL);"
    ],
    "description": "error_reporting_on"
  },
  "_get_defined_constants": {
    "prefix": "_get_defined_constants",
    "body": [
      "echo '<br>MAYANK '.basename(__FILE__).' '.__LINE__.'<pre> get_defined_constants :: '; print_r(get_defined_constants()); echo '</pre>'; exit;"
    ],
    "description": "get_defined_constants"
  },
  "_debug_backtrace": {
    "prefix": "_debug",
    "body": [
      "echo '<br>MAYANK '.basename(__FILE__).' '.__LINE__.'<pre> debug_backtrace :: '; print_r(debug_backtrace()); echo '</pre>'; exit;"
    ],
    "description": "debug_backtrace"
  },
  "_backtrace_function": {
    "prefix": "_backtrace_function",
    "body": [
      "echo '<br>MAYANK '.basename(__FILE__).' '.__LINE__.'<pre> whereFucntionExist :: '; print_r(whereFucntionExist('your_function_name')); echo '</pre>'; exit;"
    ],
    "description": "debug_backtrace"
  },
  "whereFucntionExist": {
    "prefix": "_whereFucntionExist",
    "body": [
      "function whereFucntionExist($$function_name=''){",
      "if(empty($$function_name)) return false;",
      "   $$reflFunc = new ReflectionFunction($$function_name);",
      "   return $$reflFunc->getFileName() . ':' . $$reflFunc->getStartLine();",
      "}"
    ],
    "description": "The code checks if the value is countable and returns a count of the value."
  },
  "debugDumpParams": {
    "prefix": "_sqldebug",
    "body": [
      "echo '<br>MAYANK '.basename(__FILE__).' '.__LINE__.'<pre> data :: '; print_r($$Object->debugDumpParams()); echo '</pre>'; exit;"
    ],
    "description": "_sqldebug"
  }
}